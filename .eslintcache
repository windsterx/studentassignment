[{"F:\\React\\assignment\\src\\reportWebVitals.js":"1","F:\\React\\assignment\\src\\index.js":"2","F:\\React\\assignment\\src\\App.js":"3","F:\\React\\assignment\\src\\Components\\Student.js":"4"},{"size":362,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":584,"mtime":1606636698412,"results":"8","hashOfConfig":"6"},{"size":4493,"mtime":1606636615748,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"exnk76",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"F:\\React\\assignment\\src\\reportWebVitals.js",[],"F:\\React\\assignment\\src\\index.js",[],"F:\\React\\assignment\\src\\App.js",["19"],"F:\\React\\assignment\\src\\Components\\Student.js",["20"],"import React, { useEffect, useState } from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {\r\n  CardHeader,\r\n  Dialog,\r\n  DialogTitle,\r\n  Card,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst Students = () => {\r\n  const [students, setStudents] = useState();\r\n  const [student, setStudent] = useState();\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setStudent();\r\n  };\r\n  useEffect(() => {\r\n    getStudents();\r\n  }, []);\r\n\r\n  const getStudents = () => {\r\n    fetch(\"http://localhost:9000/students\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setStudents([...res.students]);\r\n        console.log(students);\r\n      });\r\n  };\r\n  const getStudent = (id) => {\r\n    fetch(\"http://localhost:9000/students\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: id }),\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          res.text().then((d) => {\r\n            if (d !== \"\") {\r\n              setStudent(JSON.parse(d));\r\n              setOpen(true);\r\n            } else {\r\n              setStudent();\r\n              setOpen(true);\r\n            }\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {});\r\n  };\r\n\r\n  const StudentDetail = ({ student }) => {\r\n    return (\r\n      <>\r\n        <Dialog\r\n          onClose={handleClose}\r\n          aria-labelledby=\"simple-dialog-title\"\r\n          open={open}\r\n        >\r\n          <DialogTitle\r\n            id=\"simple-dialog-title\"\r\n            style={\r\n              student\r\n                ? { background: \"#512da8\", color: \"#fff\" }\r\n                : { background: \"#f44336\", color: \"#fff\" }\r\n            }\r\n          >\r\n            Student Details {student ? \"\" : \"Not Found\"}\r\n          </DialogTitle>\r\n          {student ? (\r\n            <Card>\r\n              <CardHeader\r\n                title={\r\n                  <span style={{ fontSize: \"18px\" }}>\r\n                    Name : {student?.name}\r\n                  </span>\r\n                }\r\n                subheader={\r\n                  <div\r\n                    style={{\r\n                      textAlign: \"start\",\r\n                    }}\r\n                  >\r\n                    <p>Class : {student?.class}</p>\r\n                    <p>Age : {student?.age}</p>\r\n                    <p>Roll Number : {student?.id}</p>\r\n                    <p>City : {student?.city}</p>\r\n                  </div>\r\n                }\r\n              />\r\n            </Card>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Dialog>\r\n      </>\r\n    );\r\n  };\r\n  const SearchBox = () => {\r\n    return (\r\n      <div style={{ display: \"flex\", margin: \"10px\" }}>\r\n        <TextField\r\n          name=\"search\"\r\n          label=\"Search with ID\"\r\n          value={search}\r\n          onChange={(e) => {\r\n            setSearch(e.target.value);\r\n          }}\r\n        />\r\n        <Button\r\n          style={{ marginLeft: \"10px\" }}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            getStudent(search);\r\n          }}\r\n        >\r\n          Search\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div style={{ width: \"50%\" }}>\r\n      <h1\r\n        style={{\r\n          margin: \"5px\",\r\n          background: \"#f50057\",\r\n          boxShadow: \"2px 2px 10px #757575\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        <span style={{ margin: \"5px 30px\" }}>Students</span>\r\n      </h1>\r\n      <SearchBox />\r\n\r\n      <List\r\n        style={{ marginLeft: \"20px\" }}\r\n        component=\"nav\"\r\n        aria-label=\"main mailbox folders\"\r\n      >\r\n        {students?.map((student) => {\r\n          return (\r\n            <ListItem button>\r\n              <ListItemText\r\n                onClick={() => {\r\n                  getStudent(student.id);\r\n                }}\r\n                primary={`${student.id}. ${student.name}`}\r\n              />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        style={{ margin: \"10px\" }}\r\n        onClick={() => getStudents()}\r\n      >\r\n        Refresh\r\n      </Button>\r\n      <StudentDetail student={student} />\r\n    </div>\r\n  );\r\n};\r\nexport default Students;\r\n",{"ruleId":"21","severity":1,"message":"22","line":1,"column":8,"nodeType":"23","messageId":"24","endLine":1,"endColumn":12},{"ruleId":"25","severity":1,"message":"26","line":26,"column":6,"nodeType":"27","endLine":26,"endColumn":8,"suggestions":"28"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStudents'. Either include it or remove the dependency array.","ArrayExpression",["29"],{"desc":"30","fix":"31"},"Update the dependencies array to be: [getStudents]",{"range":"32","text":"33"},[658,660],"[getStudents]"]